# -*- coding: utf-8 -*-
"""chatbot.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Rly2yO3WLlO3Vzffk3F1GhOuGmf4Ddlf
"""

!pip install google-generativeai

import google.generativeai as genai
from google.colab import userdata

GOOGLE_GEMINI_API_KEY = userdata.get("GOOGLE_GEMINI_API_KEY")

genai.configure(api_key=GOOGLE_GEMINI_API_KEY)

model = genai.GenerativeModel('gemini-1.0-pro')

"""Lógica do Chatbot:"""

def gerar_resposta(prompt):
  """Gera uma resposta usando o modelo Gemini."""
  response = model.generate_content(prompt)
  return response.text

def iniciar_chatbot():
  """Inicia o loop de conversação do chatbot."""
  print("Olá! Sou um chatbot Gemini. Digite 'sair' para encerrar.")
  while True:
    mensagem_usuario = input("Você: ")
    if mensagem_usuario.lower() == 'sair':
      print("Até a próxima!")
      break
    resposta = gerar_resposta(mensagem_usuario)
    print(f"Chatbot: {resposta}")

# Inicia o chatbot
iniciar_chatbot()

"""Instruções do Sistema (System Prompts): Você pode fornecer instruções iniciais ao modelo para definir o comportamento, o tom de voz e o conhecimento do seu chatbot. Por exemplo:"""

def gerar_resposta_personalizada(prompt):
    """Gera uma resposta personalizada usando o modelo Gemini com instruções."""
    response = model.generate_content(
        [
            {"role": "system", "content": "Você é um assistente virtual amigável e prestativo especializado em receitas culinárias."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.text

"""Histórico de Conversa: Para criar um chatbot com memória, você precisará armazenar o histórico das interações (mensagens do usuário e respostas do chatbot) e incluí-lo nas próximas solicitações ao modelo."""

historico_conversa = []

def gerar_resposta_com_historico(prompt):
  """Gera uma resposta usando o modelo Gemini, considerando o histórico da conversa."""
  historico_conversa.append({"role": "user", "content": prompt})
  response = model.generate_content(historico_conversa)
  historico_conversa.append({"role": "model", "content": response.text})
  return response.text

"""Integração com outras ferramentas: Você pode integrar seu chatbot com outras ferramentas e APIs para fornecer informações mais específicas (por exemplo, buscar informações na web, acessar um banco de dados, etc.).

"""